<Type Name="VisionServiceOptions" FullName="Azure.AI.Vision.Core.Options.VisionServiceOptions">
  <TypeSignature Language="C#" Value="public class VisionServiceOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisionServiceOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Vision.Core.Options.VisionServiceOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class VisionServiceOptions" />
  <TypeSignature Language="F#" Value="type VisionServiceOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure-AI-Vision-Core-CSharp</AssemblyName>
    <AssemblyVersion>0.9.0.26</AssemblyVersion>
    <AssemblyVersion>0.10.0.26</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the configuration options used to connect to a remote Vision AI Service
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisionServiceOptions (Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Core.Options.VisionServiceOptions.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As Uri)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Vision.Core.Options.VisionServiceOptions : Uri -&gt; Azure.AI.Vision.Core.Options.VisionServiceOptions" Usage="new Azure.AI.Vision.Core.Options.VisionServiceOptions url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure-AI-Vision-Core-CSharp</AssemblyName>
        <AssemblyVersion>0.10.0.26</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="url">The endpoint of the Vision Service</param>
        <summary>
            Constructs a new VisionServiceOptions
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisionServiceOptions (string url, Azure.AzureKeyCredential key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class Azure.AzureKeyCredential key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Core.Options.VisionServiceOptions.#ctor(System.String,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, key As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Vision.Core.Options.VisionServiceOptions : string * Azure.AzureKeyCredential -&gt; Azure.AI.Vision.Core.Options.VisionServiceOptions" Usage="new Azure.AI.Vision.Core.Options.VisionServiceOptions (url, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure-AI-Vision-Core-CSharp</AssemblyName>
        <AssemblyVersion>0.10.0.26</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="key" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="url">The endpoint of the Vision Service</param>
        <param name="key">The Computer Vision key used to authenticate against the Vision Service</param>
        <summary>
            Constructs a new VisionServiceOptions
            </summary>
        <remarks>
            Store your key securely. For example, using Azure Key Vault. Do not compile the value of your key into
            your application source code. Fetch it at run-time when needed from a secure location.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisionServiceOptions (string url, Azure.Core.TokenCredential tokenCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class Azure.Core.TokenCredential tokenCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Core.Options.VisionServiceOptions.#ctor(System.String,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, tokenCredential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Vision.Core.Options.VisionServiceOptions : string * Azure.Core.TokenCredential -&gt; Azure.AI.Vision.Core.Options.VisionServiceOptions" Usage="new Azure.AI.Vision.Core.Options.VisionServiceOptions (url, tokenCredential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure-AI-Vision-Core-CSharp</AssemblyName>
        <AssemblyVersion>0.10.0.26</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="tokenCredential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="url">The endpoint of the Vision Service</param>
        <param name="tokenCredential">A short-duration token derived from your Computer Vision key, used to authenticate against the Vision Service</param>
        <summary>
            Constructs a new VisionServiceOptions
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisionServiceOptions (Uri url, Azure.AzureKeyCredential key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri url, class Azure.AzureKeyCredential key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Core.Options.VisionServiceOptions.#ctor(System.Uri,Azure.AzureKeyCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As Uri, key As AzureKeyCredential)" />
      <MemberSignature Language="F#" Value="new Azure.AI.Vision.Core.Options.VisionServiceOptions : Uri * Azure.AzureKeyCredential -&gt; Azure.AI.Vision.Core.Options.VisionServiceOptions" Usage="new Azure.AI.Vision.Core.Options.VisionServiceOptions (url, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure-AI-Vision-Core-CSharp</AssemblyName>
        <AssemblyVersion>0.10.0.26</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="key" Type="Azure.AzureKeyCredential" />
      </Parameters>
      <Docs>
        <param name="url">The endpoint URL of the Vision Service</param>
        <param name="key">The Computer Vision key used to authenticate against the Vision Service</param>
        <summary>
            Constructs a new VisionServiceOptions
            </summary>
        <remarks>
            Store your key securely. For example, using Azure Key Vault. Do not compile the value of your key into
            your application source code. Fetch it at run-time when needed from a secure location.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Advanced">
      <MemberSignature Language="C#" Value="public Azure.AI.Vision.Core.Options.VisionServiceAdvancedOptions Advanced { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.Vision.Core.Options.VisionServiceAdvancedOptions Advanced" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.Vision.Core.Options.VisionServiceOptions.Advanced" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Advanced As VisionServiceAdvancedOptions" />
      <MemberSignature Language="F#" Value="member this.Advanced : Azure.AI.Vision.Core.Options.VisionServiceAdvancedOptions" Usage="Azure.AI.Vision.Core.Options.VisionServiceOptions.Advanced" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure-AI-Vision-Core-CSharp</AssemblyName>
        <AssemblyVersion>0.10.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Vision.Core.Options.VisionServiceAdvancedOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a collection of advanced options for the VisionService
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAuthorizationToken">
      <MemberSignature Language="C#" Value="public void SetAuthorizationToken (Azure.Core.AccessToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuthorizationToken(valuetype Azure.Core.AccessToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Vision.Core.Options.VisionServiceOptions.SetAuthorizationToken(Azure.Core.AccessToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuthorizationToken (token As AccessToken)" />
      <MemberSignature Language="F#" Value="member this.SetAuthorizationToken : Azure.Core.AccessToken -&gt; unit" Usage="visionServiceOptions.SetAuthorizationToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure-AI-Vision-Core-CSharp</AssemblyName>
        <AssemblyVersion>0.10.0.26</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Azure.Core.AccessToken" />
      </Parameters>
      <Docs>
        <param name="token">The authorization token</param>
        <summary>
            Sets a new authorization token to be used to connect to the Vision Service.
            </summary>
        <remarks>
            If the previously given token has expired, you must call this method with a new token before
            a new connections to the Vision Service can be made.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
